# LocalLore - Product Requirements Document (PRD)

**Product Name:** LocalLore  
**Tagline:** "Discover what's happening on campus, right now."  
**Target:** Purdue University Campus Events Platform  
**Version:** 1.0 (MVP)  
**Last Updated:** June 3, 2025  

## 1. Executive Summary

### 1.1 Product Vision
LocalLore is a real-time campus event discovery platform specifically designed for Purdue University students. The platform allows students to instantly share and discover small-scale events, pop-up activities, study groups, food trucks, club tables, and informal gatherings happening across campus. Unlike official university event calendars that focus on major events, LocalLore captures the spontaneous, grassroots activities that make campus life vibrant.

### 1.2 Problem Statement
- **Current Gap:** Purdue's official events page only covers major institutional events
- **Student Pain Points:** 
  - Small events (club tables, food trucks, study groups, pop-up activities) lack visibility
  - Instagram stories have limited reach (followers only)
  - Students miss interesting activities due to poor discovery mechanisms
  - Event organizers struggle to attract attendees for smaller gatherings
- **Opportunity:** Create a centralized, real-time platform for campus micro-events

### 1.3 Target Market
- **Primary:** Purdue University students (40,000+ undergrad/grad students)
- **Secondary:** Campus organizations, clubs, and informal event organizers
- **Future Expansion:** Other university campuses across the US

### 1.4 Success Metrics (MVP)
- User registration: 500+ Purdue students in first month
- Event pins created: 100+ events per week
- Daily active users: 200+ students
- Event engagement: 70%+ of posted events receive views
- User retention: 40%+ weekly return rate

## 2. User Personas

### 2.1 Event Creator Emma
- **Demographics:** Purdue junior, involved in 2-3 clubs
- **Goals:** Increase attendance at club tables, study sessions, and informal meetups
- **Pain Points:** Limited outreach options, events often go unnoticed
- **Behavior:** Frequently posts Instagram stories, organizes study groups

### 2.2 Discovery David  
- **Demographics:** Purdue sophomore, social but busy with academics
- **Goals:** Find interesting activities during free time, meet new people
- **Pain Points:** Misses events due to poor awareness, overwhelmed by official channels
- **Behavior:** Checks social media between classes, values authentic peer recommendations

### 2.3 Campus Connector Claire
- **Demographics:** Purdue senior, very active in campus life
- **Goals:** Stay informed about all campus activities, help others discover events
- **Pain Points:** Information scattered across multiple platforms
- **Behavior:** Early adopter, influential within student networks

## 3. Core Features (MVP)

### 3.1 User Authentication
- **Purdue Email Verification:** Only @purdue.edu email addresses allowed
- **Simple Registration:** Email, password, display name, graduation year
- **Profile:** Basic info, joined date, events created count

### 3.2 Event Pin Creation
- **Location Selection:** Click anywhere on Purdue campus map
- **Event Details Form:**
  - Event title (required, 5-100 characters)
  - Description (required, 20-500 characters)  
  - Start time (required, within next 7 days)
  - End time (required, must be after start time)
  - Contact info (optional, @purdue.edu email or phone)
  - Category tags (Food, Study, Club, Social, Academic, Other)
- **Auto-Expiration:** Events automatically removed 1 hour after end time
- **Image Upload:** Optional, 1 image per event

### 3.3 Campus Map Interface
- **Purdue-Focused View:** Map centered on Purdue campus with appropriate zoom
- **Real-Time Event Display:** Show only active events (current time < end time)
- **Event Filtering:** 
  - By category tags
  - By time (next 2 hours, today, this week)
  - By location (building or area)
- **Event Details Panel:** Click pin to view full event information

### 3.4 Event Discovery Features
- **Live Events Feed:** Simple list view of currently active events
- **Upcoming Events:** Events starting in next 24 hours
- **Popular Events:** Most viewed events this week
- **Search:** Find events by title, description, or location

## 4. Technical Specifications

### 4.1 Technology Stack (Unchanged)
- **Frontend:** React.js with Next.js, Tailwind CSS, Shadcn/UI
- **Backend:** Supabase (Auth, Database, Storage)
- **Maps:** Mapbox GL JS
- **Hosting:** Vercel

### 4.2 Updated Database Schema

```sql
-- Users table (updated)
CREATE TABLE users (
  id UUID REFERENCES auth.users NOT NULL PRIMARY KEY,
  display_name TEXT NOT NULL,
  purdue_email TEXT UNIQUE NOT NULL,
  graduation_year INTEGER,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
  is_verified BOOLEAN DEFAULT false,
  CONSTRAINT purdue_email_check CHECK (purdue_email LIKE '%@purdue.edu')
);

-- Events table (replaces pins table)
CREATE TABLE events (
  id UUID DEFAULT uuid_generate_v4() PRIMARY KEY,
  user_id UUID REFERENCES users(id) NOT NULL,
  title TEXT NOT NULL,
  description TEXT NOT NULL,
  latitude DECIMAL NOT NULL,
  longitude DECIMAL NOT NULL,
  start_time TIMESTAMP WITH TIME ZONE NOT NULL,
  end_time TIMESTAMP WITH TIME ZONE NOT NULL,
  contact_info TEXT,
  category TEXT NOT NULL DEFAULT 'Other',
  image_url TEXT,
  view_count INTEGER DEFAULT 0,
  created_at TIMESTAMP WITH TIME ZONE DEFAULT now() NOT NULL,
  
  CONSTRAINT title_length CHECK (char_length(title) >= 5 AND char_length(title) <= 100),
  CONSTRAINT description_length CHECK (char_length(description) >= 20 AND char_length(description) <= 500),
  CONSTRAINT valid_time_range CHECK (end_time > start_time),
  CONSTRAINT future_event CHECK (start_time > now()),
  CONSTRAINT max_duration CHECK (end_time <= start_time + INTERVAL '7 days'),
  CONSTRAINT valid_category CHECK (category IN ('Food', 'Study', 'Club', 'Social', 'Academic', 'Other'))
);

-- Purdue campus boundary constraints (approximate)
ALTER TABLE events ADD CONSTRAINT purdue_campus_bounds 
CHECK (
  latitude BETWEEN 40.4180 AND 40.4360 AND 
  longitude BETWEEN -86.9340 AND -86.9050
);

-- Auto-cleanup function for expired events
CREATE OR REPLACE FUNCTION cleanup_expired_events()
RETURNS void AS $$
BEGIN
  DELETE FROM events WHERE end_time < now() - INTERVAL '1 hour';
END;
$$ LANGUAGE plpgsql;

-- Schedule cleanup to run every hour
SELECT cron.schedule('cleanup-expired-events', '0 * * * *', 'SELECT cleanup_expired_events();');
```

### 4.3 Row Level Security Policies

```sql
-- Enable RLS
ALTER TABLE events ENABLE ROW LEVEL SECURITY;

-- Anyone can view active events
CREATE POLICY "Anyone can view active events" ON events
  FOR SELECT USING (end_time > now());

-- Only authenticated Purdue users can create events
CREATE POLICY "Purdue users can create events" ON events
  FOR INSERT WITH CHECK (
    auth.uid() = user_id AND 
    EXISTS (SELECT 1 FROM users WHERE id = auth.uid() AND is_verified = true)
  );

-- Users can only update/delete their own events
CREATE POLICY "Users can manage own events" ON events
  FOR UPDATE USING (auth.uid() = user_id);

CREATE POLICY "Users can delete own events" ON events
  FOR DELETE USING (auth.uid() = user_id);
```

## 5. User Interface Updates

### 5.1 Landing Page
- **Hero Section:** "Discover what's happening at Purdue, right now"
- **Value Props:** Real-time events, student-created, campus-wide discovery
- **Purdue Branding:** Incorporate Purdue colors (gold #B1810B, black #000000)
- **Student Testimonials:** Quick quotes about missing events/discovering activities

### 5.2 Event Creation Form
- **Quick Create:** Streamlined form optimized for mobile use
- **Smart Defaults:** 
  - Default duration: 2 hours
  - Default category based on time/location patterns
  - Auto-suggest popular campus locations
- **Preview:** Show how event will appear on map before submitting

### 5.3 Campus Map View
- **Purdue Campus Base:** Custom map style highlighting campus buildings
- **Event Categories:** Color-coded pins by event type
- **Time Filters:** Quick toggles for "Now", "Next 2 Hours", "Today", "This Week"
- **Building Labels:** Show major Purdue building names

## 6. Business Model (Post-MVP)

### 6.1 Freemium Model
- **Free Tier:** Basic event creation, discovery, standard pins
- **Premium Features ($2.99/month):**
  - Featured event pins (appear at top of feeds)
  - Advanced analytics (view counts, engagement metrics)
  - Custom event styling/colors
  - Early access to new features
  - Event promotion to email subscribers

### 6.2 Revenue Streams
- Student subscriptions ($2.99/month)
- Campus organization partnerships (sponsored events)
- University licensing (expansion to other campuses)

## 7. Go-to-Market Strategy

### 7.1 MVP Launch Plan
1. **Beta Testing:** 50 students from diverse campus areas
2. **Soft Launch:** 500 students via targeted Instagram/GroupMe outreach
3. **Campus Partnerships:** Collaborate with 5-10 active student organizations
4. **Viral Mechanics:** Built-in sharing features, event discovery incentives

### 7.2 Growth Strategy
- **Student Organization Partnerships:** Onboard clubs as early adopters
- **Campus Events:** Use LocalLore to promote its own presence at campus fairs
- **Influencer Program:** Partner with student social media accounts
- **Word-of-Mouth:** Focus on solving real pain points to drive organic growth

## 8. Development Priorities

### 8.1 Phase 1 (MVP - 2 weeks)
1. Update database schema for events
2. Create Purdue email verification system
3. Build event creation form with campus map
4. Implement event discovery and filtering
5. Add auto-expiration for past events
6. Deploy to production with Purdue domain restrictions

### 8.2 Phase 2 (Post-MVP - 4 weeks)
1. Mobile-optimized interface improvements
2. Push notifications for nearby events
3. Event analytics and insights
4. Social features (event saves, user following)
5. Premium subscription integration

### 8.3 Phase 3 (Growth - 8 weeks)
1. Advanced filtering and search
2. Event promotion tools
3. Campus organization dashboard
4. Integration with existing campus systems
5. Multi-campus expansion framework

## 9. Success Criteria

### 9.1 MVP Success Metrics
- **User Adoption:** 500+ verified Purdue accounts within 30 days
- **Content Creation:** 20+ new events posted daily
- **Engagement:** 60%+ of events receive at least 10 views
- **Retention:** 30%+ of users return within a week

### 9.2 Product-Market Fit Indicators
- Organic user growth (word-of-mouth referrals)
- Student organizations proactively using the platform
- Students reporting they discovered events they wouldn't have found otherwise  
- Regular daily usage patterns aligned with campus life

## 10. Risk Mitigation

### 10.1 Technical Risks
- **Campus WiFi Issues:** Optimize for low-bandwidth scenarios
- **Map Performance:** Implement pin clustering for high-density areas
- **Spam/Abuse:** Rate limiting and content moderation tools

### 10.2 Adoption Risks  
- **Critical Mass:** Focus on specific campus areas/demographics initially
- **Competing Platforms:** Differentiate through real-time, campus-specific focus
- **Seasonal Usage:** Plan for winter break and summer semester patterns

## 11. Future Expansion

### 11.1 Multi-Campus Strategy
- **Campus Selection Criteria:** Student population size, campus layout, existing event discovery gaps
- **Customization Framework:** Campus-specific branding, boundaries, features
- **Revenue Model:** University licensing fees + student subscriptions

### 11.2 Advanced Features
- **AI-Powered Recommendations:** Suggest events based on past attendance
- **Integration APIs:** Connect with campus dining, transportation, academic systems
- **Analytics Dashboard:** Insights for student organizations and campus administrators
- **Community Features:** User profiles, event reviews, social connections